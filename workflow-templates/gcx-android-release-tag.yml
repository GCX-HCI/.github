# This workflow builds the release variant of the project and uploads it to a newly created release 
# It is triggered by the creation of a tag named 'release/v*', e.g. 'release/v1.0.0'
# The <MY RELEASE NOTES> placeholder has to be replaced with the real release notes
# Please note that the KeyStore credentials have to be created as secrets in your project
# For more information about best practices, see:
# https://grandcentrix.atlassian.net/wiki/spaces/TENG/pages/31180230199/GitHub+Actions+Best+Practices

name: Build Release

on:
  push:
    tags:
      - 'release/v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_release:
    name: Build Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up JDK 8
        uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4.5.0
        with:
          distribution: 'adopt'
          java-version: 8
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@d156388eb19639ec20ade50009f3d199ce1e2808 # v4.1.0
      - name: Build Release
        run: ./gradlew assembleRelease
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          ALIAS_PASSWORD: ${{ secrets.ALIAS_PASSWORD }}
        timeout-minutes: 10
      - name: Create github release
        id: github_release
        uses: softprops/action-gh-release@e7a8f85e1c67a31e6ed99a94b41bd0b71bbee6b8 # v2.0.9
        with:
          tag_name: ${GITHUB_REF#refs/*/}
          name: Release $(cat app/build.gradle | grep 'versionName ' | sed -e "s/^.*[[:blank:]]//" -e "s/^\"//" -e "s/\"$//")
          prerelease: false
          generate_release_notes: true
          files: |
            app/build/outputs/apk/release/app-release.apk
